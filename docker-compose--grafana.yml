name: 'postgres_proj'

services:
  service-db:
    image: postgres:16.9
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: xxx
    ports:
      - "1xxx:xxx"
    volumes:
      - ./infrastructure/xxx
      - ./infrastructure/yyy
    command: ["-c", "shared_buffers=256MB", "-c", "max_connections=100"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
 

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:9.7
    user: root
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: pg@sa.com
      PGADMIN_DEFAULT_PASSWORD: GHb86hwRrHHb
    ports:
      - "5xxx:80"
    volumes:
      - ./infrastructure/pgadmin-data:/var/lib/pgadmin
      
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    environment:
      REDIS_PASSWORD: xxx
      REDIS_PORT: 6379
      REDIS_DATABASES: 16      
    ports:
      - "6379:6379"
    volumes:
      - ./infrastructure/redis/data:/var/lib/redis
      - ./infrastructure/redis/redis.conf:/usr/local/etc/redis.conf
      - ./infrastructure/redis/redis_init.sh:/usr/local/etc/redis_init.sh
      - ./infrastructure/redis/healthchecks:/healthchecks
    privileged: true
    command: redis-server --bind redis --port 6379
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "10s"

  redis-insight:
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "5540:5540"
    volumes:
      - ./infrastructure/redis-insight:/data

  grafana:
    image: "grafana/grafana-oss:11.5.2-ubuntu"
    ports:
      - 3000:3000
    volumes:
      - ./infrastructure/common_volume/grafana/grafana-config:/etc/grafana
      - ./infrastructure/common_volume/grafana/grafana-data:/var/lib/grafana
    user: "root"
    environment:
      GF_RENDERING_SERVER_URL: "http://grafana-image-renderer:8081/render"
      GF_RENDERING_CALLBACK_URL: "http://grafana:3000/"
      GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE: "true"
      GF_LOG_FILTERS: "rendering:debug"      
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: stop-first
      resources:
        limits:
          memory: 1024M
         
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./infrastructure/common_volume/swarm/grafana/config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./infrastructure/common_volume/swarm/grafana/config/web-config.yaml:/etc/prometheus/web-config.yaml:ro
      - ./infrastructure/common_volume/grafana/prometheus-data:/prometheus
    user: "root"
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.config.file=/etc/prometheus/web-config.yaml"
      - "--storage.tsdb.retention.time=7d"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: stop-first
      resources:
        limits:
          memory: 1024M
          
  pushgateway:
    image: "prom/pushgateway:v1.6.2"
    ports:
      - 9091:9091
    volumes:
      - ./infrastructure/common_volume/swarm/grafana/config/web-config.yaml:/etc/prometheus/web-config.yaml:ro
    command:
      - "--web.config.file=/etc/prometheus/web-config.yaml"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
      resources:
        limits:
          memory: 512M
          
  loki:
    image: grafana/loki:2.9.4
    ports:
#      - "3100:3100" #port closed because loki does not support basic auth      
    volumes:
      - ./infrastructure/common_volume/swarm/grafana/config/loki.yaml:/etc/loki/loki.yaml:ro
      - ./infrastructure/common_volume/grafana/loki-data:/loki
    command: 
      - "--config.file=/etc/loki/loki.yaml"
    user: "root"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: stop-first
      resources:
        limits:
          memory: 1024M
          
  promtail:
    image: grafana/promtail:2.9.4
    volumes:
      - ./infrastructure/common_volume/swarm/grafana/config/promtail.yaml:/etc/promtail/promtail.yaml:ro
      - ./infrastructure/common_volume/grafana/promtail-data:/var/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command:
      - "--config.file=/etc/promtail/promtail.yaml"
      - "--config.expand-env=true"
    deploy:
      mode: global
      update_config:
        order: stop-first
      resources:
        limits:
          memory: 512M
 